image:
- Visual Studio 2019
- macOS
- Ubuntu

skip_branch_with_pr: true
stack: python 3.10

environment:
  GITHUB_TOKEN:
    secure: Ti46nPnZgFh0nRteU6ma0EhJnCTW7PaMn9hnnewZl4gBFPyRQnXNCwGog02+MRLX

install:
# - pip install --upgrade pip virtualenv
# - python.exe -m pip install --upgrade pip
- pip3 install virtualenv
- pip3 install --only-binary Pillow Pillow
# Complete Scrapli dependencies installation:
- pip3 install scrapli
- pip3 install scrapli[paramiko]
- pip3 install scrapli[ssh2]
- pip3 install scrapli[asyncssh]
- pip3 install scrapli[textfsm]
- pip3 install scrapli[ttp]
- pip3 install scrapli[genie]
- pip3 install scrapli[netconf]
- pip3 install scrapli[community]
- pip3 install -r requirements.txt

build_script:
- flet pack WGPtn_CRAcc2CSC_311023_68.py --name CRAcc2CSC --icon CRAcc2CSCS.png --product-name CRAcc2CSC --product-version "0.6.8" --copyright "Copyright (c) 2022 Wargaming PLC"

test: off

# Publish artifacts to GitHub Releases on "tag" builds
deploy:
  provider: GitHub
  auth_token: $(GITHUB_TOKEN)
  on:
    APPVEYOR_REPO_TAG: true

for:
#   Windows package 
-
  matrix:
    only:
    - image: Visual Studio 2019
  after_build:
  - 7z a CRAcc2CSC-windows.zip %CD%\dist\*.exe
  artifacts:
  - path: CRAcc2CSC-windows.zip
#   macOS package
-
  matrix:
    only:
    - image: macOS

  after_build:
  - tar -czvf CRAcc2CSC-macos.tar.gz -C dist CRAcc2CSC.app

  artifacts:
  - path: CRAcc2CSC-macos.tar.gz
# # Linux package 
-
  matrix:
    only:
    - image: Ubuntu

  after_build:
  - tar -czvf CRAcc2CSC-linux.tar.gz -C dist CRAcc2CSC

  artifacts:
  - path: CRAcc2CSC-linux.tar.gz


paramiko
ssh2
asyncssh
textfsm (textfsm and ntc-templates)
ttp (ttp template parser)
genie (genie/pyats)
netconf (scrapli_netconf)
community (scrapli_community)